using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Net;
using System.Net.Sockets;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace UDPSendReceive
{
    public partial class Form1 : Form
    {
        UdpClient client = null;
        int SendPort = 1122;

        public Form1()
        {
            InitializeComponent();

            client = new UdpClient(3333);  //本地发送端口
        }


        private void btnStartUDP_Click(object sender, EventArgs e)
        {
            SendPort = Convert.ToInt32(tbSendPort.Text);

        }

        private void btnSend_Click(object sender, EventArgs e)
        {

        }

        private void SendBroadcast()
        {
            string sendString = "HH";//要发送的字符串 
            byte[] sendData = null;//要发送的字节数组 
           
            Console.WriteLine("Send");
            IPAddress remoteIP = IPAddress.Parse("255.255.255.255");
            int remotePort = 33582;
            IPEndPoint remotePoint = new IPEndPoint(remoteIP, remotePort);//实例化一个远程端点 
            

            while (true)
            {
                sendString = Console.ReadLine();
                sendData = Encoding.ASCII.GetBytes(sendString);

                client.Send(sendData, sendData.Length, remotePoint);//将数据发送到远程端点 
                Console.WriteLine("Send Port:" + ((IPEndPoint)client.Client.LocalEndPoint).Port);
                //client.Close();//关闭连接 
            }
        }

        private void RecvThread()
        {
            
            string receiveString = null;
            byte[] receiveData = null;
            //实例化一个远程端点，IP和端口可以随意指定，等调用client.Receive(ref remotePoint)时会将该端点改成真正发送端端点 
            IPEndPoint remotePoint = new IPEndPoint(IPAddress.Broadcast, 33);  //不能设置为0，否则获取到的对方端口不对
            while (true)
            {

                receiveData = client.Receive(ref remotePoint);//接收数据 
                receiveString = Encoding.ASCII.GetString(receiveData);
                Console.WriteLine(remotePoint.Address + ":" + remotePoint.Port + ":" + receiveString);
                //client.Close();//关闭连接 
            }
        }
    }
}
